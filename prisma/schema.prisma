// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Patient {
  id        String   @id @default(cuid())
  name      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  encounters Encounter[]
}

model Clinician {
  id        String   @id @default(cuid())
  name      String
  pin_hash  String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  encounters Encounter[]
}

model Encounter {
  id           String   @id @default(cuid())
  patient_id   String
  clinician_id String
  started_at   DateTime @default(now())
  ended_at     DateTime?
  status       String   @default("active") // active, completed, cancelled
  summary      String?

  patient   Patient   @relation(fields: [patient_id], references: [id])
  clinician Clinician @relation(fields: [clinician_id], references: [id])

  transcript_lines TranscriptLine[]
  intents         Intent[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model TranscriptLine {
  id           String   @id @default(cuid())
  encounter_id String
  speaker      String   // "clinician" or "patient"
  lang         String   // "en" or "es"
  text         String   // original text
  en_text      String?  // English translation
  es_text      String?  // Spanish translation
  timestamp    DateTime @default(now())

  encounter Encounter @relation(fields: [encounter_id], references: [id])

  created_at DateTime @default(now())
}

model Intent {
  id           String   @id @default(cuid())
  encounter_id String
  actor        String   // "clinician" or "patient"
  name         String   // "repeat_last", "schedule_follow_up", "send_lab_order"
  args         String   // JSON string of arguments
  status       String   @default("detected") // detected, pending, completed, failed
  webhook_response String? // JSON string of webhook response

  encounter Encounter @relation(fields: [encounter_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
